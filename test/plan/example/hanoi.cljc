(ns plan.example.hanoi)

(def domain
  '#:plan.domain{:name :hanoi, :schema #:hanoi{:clear {:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/clear, :plan.domain.predicate/vars [?x]}, :on {:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/on, :plan.domain.predicate/vars [?x ?y]}, :smaller {:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/smaller, :plan.domain.predicate/vars [?x ?y]}}, :actions #:hanoi{:move {:plan.domain/type :action, :plan.domain.action/name :hanoi/move, :plan.domain.action/vars (?disc ?from ?to), :plan.domain.action/precondition [:plan.domain/and [{:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/smaller, :plan.domain.predicate/vars [?to ?disc]} {:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/on, :plan.domain.predicate/vars [?disc ?from]} {:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/clear, :plan.domain.predicate/vars [?disc]} {:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/clear, :plan.domain.predicate/vars [?to]}]], :plan.domain.action/effect [:plan.domain/and [{:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/clear, :plan.domain.predicate/vars [?from]} {:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/on, :plan.domain.predicate/vars [?disc ?to]} [:plan.domain/not {:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/on, :plan.domain.predicate/vars [?disc ?from]}] [:plan.domain/not {:plan.domain/type :predicate, :plan.domain.predicate/name :hanoi/clear, :plan.domain.predicate/vars [?to]}]]]}}})

(def problem
  '#:plan.problem{:name :hanoi3, :domain :hanoi, :schema #:hanoi3{:peg1 #:plan.problem{:type :object, :ident :hanoi3/peg1}, :peg2 #:plan.problem{:type :object, :ident :hanoi3/peg2}, :peg3 #:plan.problem{:type :object, :ident :hanoi3/peg3}, :d1 #:plan.problem{:type :object, :ident :hanoi3/d1}, :d2 #:plan.problem{:type :object, :ident :hanoi3/d2}, :d3 #:plan.problem{:type :object, :ident :hanoi3/d3}}, :init [{:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/peg1 :hanoi3/d1]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/peg1 :hanoi3/d2]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/peg1 :hanoi3/d3]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/peg2 :hanoi3/d1]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/peg2 :hanoi3/d2]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/peg2 :hanoi3/d3]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/peg3 :hanoi3/d1]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/peg3 :hanoi3/d2]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/peg3 :hanoi3/d3]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/d2 :hanoi3/d1]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/d3 :hanoi3/d1]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/smaller, :plan.problem.predicate/args [:hanoi3/d3 :hanoi3/d2]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/clear, :plan.problem.predicate/args [:hanoi3/peg2]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/clear, :plan.problem.predicate/args [:hanoi3/peg3]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/clear, :plan.problem.predicate/args [:hanoi3/d1]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/on, :plan.problem.predicate/args [:hanoi3/d3 :hanoi3/peg1]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/on, :plan.problem.predicate/args [:hanoi3/d2 :hanoi3/d3]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/on, :plan.problem.predicate/args [:hanoi3/d1 :hanoi3/d2]}], :goal [:plan.problem/and [{:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/on, :plan.problem.predicate/args [:hanoi3/d3 :hanoi3/peg3]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/on, :plan.problem.predicate/args [:hanoi3/d2 :hanoi3/d3]} {:plan.problem/type :predicate, :plan.problem.predicate/name :hanoi/on, :plan.problem.predicate/args [:hanoi3/d1 :hanoi3/d2]}]]})
